<tokens>
<keyword>class</keyword>
<identifier>PongGame</identifier>
<symbol>{</symbol>
<keyword>field</keyword>
<identifier>Rectangle</identifier>
<identifier>left</identifier>
<symbol>;</symbol>
<keyword>field</keyword>
<identifier>Rectangle</identifier>
<identifier>right</identifier>
<symbol>;</symbol>
<keyword>field</keyword>
<identifier>Rectangle</identifier>
<identifier>ball</identifier>
<symbol>;</symbol>
<keyword>field</keyword>
<keyword>boolean</keyword>
<identifier>goingLeft</identifier>
<symbol>,</symbol>
<identifier>goingUp</identifier>
<symbol>;</symbol>
<keyword>field</keyword>
<keyword>int</keyword>
<identifier>side</identifier>
<symbol>,</symbol>
<identifier>direction</identifier>
<symbol>;</symbol>
<keyword>field</keyword>
<keyword>boolean</keyword>
<identifier>exit</identifier>
<symbol>;</symbol>
<keyword>constructor</keyword>
<identifier>PongGame</identifier>
<identifier>new</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>left</identifier>
<symbol>=</symbol>
<identifier>Rectangle</identifier>
<symbol>.</symbol>
<identifier>new</identifier>
<symbol>(</symbol>
<integerConstant>0</integerConstant>
<symbol>,</symbol>
<integerConstant>100</integerConstant>
<symbol>,</symbol>
<integerConstant>4</integerConstant>
<symbol>,</symbol>
<integerConstant>150</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>right</identifier>
<symbol>=</symbol>
<identifier>Rectangle</identifier>
<symbol>.</symbol>
<identifier>new</identifier>
<symbol>(</symbol>
<integerConstant>507</integerConstant>
<symbol>,</symbol>
<integerConstant>100</integerConstant>
<symbol>,</symbol>
<integerConstant>511</integerConstant>
<symbol>,</symbol>
<integerConstant>150</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>ball</identifier>
<symbol>=</symbol>
<identifier>Rectangle</identifier>
<symbol>.</symbol>
<identifier>new</identifier>
<symbol>(</symbol>
<integerConstant>255</integerConstant>
<symbol>,</symbol>
<integerConstant>100</integerConstant>
<symbol>,</symbol>
<integerConstant>259</integerConstant>
<symbol>,</symbol>
<integerConstant>104</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>goingLeft</identifier>
<symbol>=</symbol>
<keyword>true</keyword>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>goingUp</identifier>
<symbol>=</symbol>
<keyword>true</keyword>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>0</integerConstant>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>side</identifier>
<symbol>=</symbol>
<symbol>-</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<keyword>false</keyword>
<symbol>;</symbol>
<keyword>return</keyword>
<keyword>this</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>dispose</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>Memory</identifier>
<symbol>.</symbol>
<identifier>deAlloc</identifier>
<symbol>(</symbol>
<identifier>left</identifier>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>Memory</identifier>
<symbol>.</symbol>
<identifier>deAlloc</identifier>
<symbol>(</symbol>
<identifier>right</identifier>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>Memory</identifier>
<symbol>.</symbol>
<identifier>deAlloc</identifier>
<symbol>(</symbol>
<identifier>ball</identifier>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>Memory</identifier>
<symbol>.</symbol>
<identifier>deAlloc</identifier>
<symbol>(</symbol>
<keyword>this</keyword>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>return</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>moveSquare</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>side</identifier>
<symbol>=</symbol>
<integerConstant>0</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>moveUp</identifier>
<symbol>(</symbol>
<integerConstant>2</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>2</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>moveDown</identifier>
<symbol>(</symbol>
<integerConstant>2</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>3</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>moveLeft</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>4</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>moveRight</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>side</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>moveUp</identifier>
<symbol>(</symbol>
<integerConstant>2</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>2</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>moveDown</identifier>
<symbol>(</symbol>
<integerConstant>2</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>3</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>moveLeft</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>4</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>moveRight</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<symbol>}</symbol>
<keyword>return</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>moveBall</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>bx1</identifier>
<symbol>,</symbol>
<identifier>lx2</identifier>
<symbol>,</symbol>
<identifier>bx2</identifier>
<symbol>,</symbol>
<identifier>rx1</identifier>
<symbol>,</symbol>
<identifier>by1</identifier>
<symbol>,</symbol>
<identifier>by2</identifier>
<symbol>,</symbol>
<identifier>ly1</identifier>
<symbol>,</symbol>
<identifier>ly2</identifier>
<symbol>,</symbol>
<identifier>ry1</identifier>
<symbol>,</symbol>
<identifier>ry2</identifier>
<symbol>,</symbol>
<identifier>lx1</identifier>
<symbol>,</symbol>
<identifier>rx2</identifier>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>bx1</identifier>
<symbol>=</symbol>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>getx1</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>lx2</identifier>
<symbol>=</symbol>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>getx2</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>bx2</identifier>
<symbol>=</symbol>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>getx2</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>rx1</identifier>
<symbol>=</symbol>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>getx1</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>by1</identifier>
<symbol>=</symbol>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>gety1</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>by2</identifier>
<symbol>=</symbol>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>gety2</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>ly1</identifier>
<symbol>=</symbol>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>gety1</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>ly2</identifier>
<symbol>=</symbol>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>gety2</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>ry1</identifier>
<symbol>=</symbol>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>gety1</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>ry2</identifier>
<symbol>=</symbol>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>gety2</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>lx1</identifier>
<symbol>=</symbol>
<identifier>left</identifier>
<symbol>.</symbol>
<identifier>getx1</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>rx2</identifier>
<symbol>=</symbol>
<identifier>right</identifier>
<symbol>.</symbol>
<identifier>getx2</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>by1</identifier>
<symbol>&lt;</symbol>
<integerConstant>6</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>goingUp</identifier>
<symbol>=</symbol>
<keyword>false</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>by2</identifier>
<symbol>&gt;</symbol>
<integerConstant>249</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>goingUp</identifier>
<symbol>=</symbol>
<keyword>true</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>bx1</identifier>
<symbol>&lt;</symbol>
<integerConstant>4</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<keyword>true</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>bx2</identifier>
<symbol>&gt;</symbol>
<integerConstant>507</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<keyword>true</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>bx1</identifier>
<symbol>&lt;</symbol>
<identifier>lx2</identifier>
<symbol>&amp;</symbol>
<symbol>(</symbol>
<identifier>by1</identifier>
<symbol>&lt;</symbol>
<identifier>ly2</identifier>
<symbol>&amp;</symbol>
<identifier>by2</identifier>
<symbol>&gt;</symbol>
<identifier>ly1</identifier>
<symbol>)</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>goingLeft</identifier>
<symbol>=</symbol>
<keyword>false</keyword>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<keyword>false</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>bx2</identifier>
<symbol>&gt;</symbol>
<identifier>rx1</identifier>
<symbol>&amp;</symbol>
<symbol>(</symbol>
<identifier>by1</identifier>
<symbol>&lt;</symbol>
<identifier>ry2</identifier>
<symbol>&amp;</symbol>
<identifier>by2</identifier>
<symbol>&gt;</symbol>
<identifier>ry1</identifier>
<symbol>)</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>goingLeft</identifier>
<symbol>=</symbol>
<keyword>true</keyword>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<keyword>false</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>goingLeft</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>moveLeft</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<symbol>~</symbol>
<identifier>goingLeft</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>moveRight</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>goingUp</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>moveUp</identifier>
<symbol>(</symbol>
<integerConstant>5</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<symbol>~</symbol>
<identifier>goingUp</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>do</keyword>
<identifier>ball</identifier>
<symbol>.</symbol>
<identifier>moveDown</identifier>
<symbol>(</symbol>
<integerConstant>5</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>return</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>run</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>var</keyword>
<keyword>char</keyword>
<identifier>key</identifier>
<symbol>;</symbol>
<keyword>while</keyword>
<symbol>(</symbol>
<symbol>~</symbol>
<identifier>exit</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>while</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<symbol>=</symbol>
<integerConstant>0</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>key</identifier>
<symbol>=</symbol>
<identifier>Keyboard</identifier>
<symbol>.</symbol>
<identifier>keyPressed</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>moveBall</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>Sys</identifier>
<symbol>.</symbol>
<identifier>wait</identifier>
<symbol>(</symbol>
<integerConstant>20</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>exit</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>return</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<symbol>=</symbol>
<integerConstant>81</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<keyword>true</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<symbol>=</symbol>
<integerConstant>131</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>side</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<symbol>=</symbol>
<integerConstant>133</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>2</integerConstant>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>side</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<symbol>=</symbol>
<integerConstant>90</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>side</identifier>
<symbol>=</symbol>
<integerConstant>0</integerConstant>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<symbol>=</symbol>
<integerConstant>88</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>2</integerConstant>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>side</identifier>
<symbol>=</symbol>
<integerConstant>0</integerConstant>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>while</keyword>
<symbol>(</symbol>
<symbol>~</symbol>
<symbol>(</symbol>
<identifier>key</identifier>
<symbol>=</symbol>
<integerConstant>0</integerConstant>
<symbol>)</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>key</identifier>
<symbol>=</symbol>
<identifier>Keyboard</identifier>
<symbol>.</symbol>
<identifier>keyPressed</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>moveSquare</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>moveBall</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>do</keyword>
<identifier>Sys</identifier>
<symbol>.</symbol>
<identifier>wait</identifier>
<symbol>(</symbol>
<integerConstant>20</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>exit</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>return</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<symbol>}</symbol>
<symbol>}</symbol>
<keyword>return</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<symbol>}</symbol>
</tokens>