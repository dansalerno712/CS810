function Screen.init 2
push constant 0
pop local 0
push constant 1
pop local 1
push constant 16
call Array.new 1
pop static 4
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push static 4
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop static 1
push constant 0
not
pop static 2
push static 2
pop static 0
push constant 16384
pop static 3
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push static 3
push local 0
add
push static 1
call Memory.poke 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 4
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 7
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 0
push constant 16
call Math.divide 2
pop local 3
push argument 0
push local 3
push constant 16
call Math.multiply 2
sub
pop local 2
push static 3
push argument 1
push constant 32
call Math.multiply 2
push local 3
add
add
pop local 0
push local 0
call Memory.peek 1
pop local 1
push static 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push static 4
add
pop pointer 1
push that 0
push local 1
or
pop local 1
goto IF_END1
label IF_FALSE1
push local 2
push static 4
add
pop pointer 1
push that 0
push local 1
not
and
pop local 1
label IF_END1
push local 0
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 10
push constant 0
pop local 1
push constant 0
pop local 2
push constant 0
pop local 0
push argument 0
push argument 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
pop local 9
push argument 2
pop argument 0
push local 9
pop argument 2
push argument 1
pop local 9
push argument 3
pop argument 1
push local 9
pop argument 3
label IF_FALSE0
push argument 2
push argument 0
sub
pop local 3
push argument 3
push argument 1
sub
pop local 4
push local 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 3
call Math.min 2
pop local 5
push argument 1
push argument 3
call Math.max 2
pop local 6
label WHILE_EXP0
push local 5
push local 6
gt
not
not
if-goto WHILE_END0
push argument 0
push local 5
call Screen.drawPixel 2
pop temp 0
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE1
push local 4
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push argument 2
call Math.min 2
pop local 7
push argument 0
push argument 2
call Math.max 2
pop local 8
label WHILE_EXP1
push local 7
push local 8
gt
not
not
if-goto WHILE_END1
push local 7
push argument 1
call Screen.drawPixel 2
pop temp 0
push local 7
push constant 1
add
pop local 7
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE2
label WHILE_EXP2
push local 1
push local 3
gt
not
push local 2
push local 4
gt
not
and
not
if-goto WHILE_END2
push argument 0
push local 1
add
push argument 1
push local 2
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 0
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 1
add
pop local 1
push local 0
push local 4
add
pop local 0
goto IF_END3
label IF_FALSE3
push local 2
push constant 1
add
pop local 2
push local 0
push local 3
sub
pop local 0
label IF_END3
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Screen.drawRectangle 0
push constant 0
return
function Screen.drawCircle 0
push constant 0
return
